# Suppress: EC103 EC112
root = true

[*]
indent_style = space
indent_size = 4
end_of_line = crlf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = false
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_readonly_field = true:error
dotnet_style_predefined_type_for_member_access = true:error
dotnet_style_require_accessibility_modifiers = always:error
dotnet_style_allow_multiple_blank_lines_experimental = false:silent
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:error
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error

[*.md]
trim_trailing_whitespace = false

[*.cs]
# from Resharper
# https://www.jetbrains.com/help/resharper/2018.1/EditorConfig_Index.html
#
csharp_align_linq_query = true
csharp_align_multiline_array_and_object_initializer = true
csharp_align_multiline_calls_chain = true
csharp_align_multiline_expression = true
csharp_align_multiline_for_stmt = true
csharp_align_multiline_type_parameter_list = true
csharp_empty_block_style = together_same_line
csharp_force_fixed_braces_style = always_add
csharp_force_foreach_braces_style = always_add
csharp_force_ifelse_braces_style = always_add
csharp_force_using_braces_style = always_add
csharp_force_while_braces_style = always_add
csharp_indent_nested_fixed_stmt = true
csharp_indent_nested_usings_stmt = true
csharp_keep_blank_lines_in_code = 1
csharp_keep_blank_lines_in_declarations = 1
csharp_place_field_attribute_on_same_line = false
csharp_place_simple_accessor_attribute_on_same_line = false
csharp_place_simple_anonymousmethod_on_single_line = false
csharp_while_on_new_line = true
csharp_simple_embedded_statement_style = line_break
csharp_space_after_typecast_parentheses = false
csharp_space_around_multiplicative_op = true
csharp_space_before_fixed_parenthese=false
csharp_space_within_single_line_array_initializer_braces = true
csharp_space_with_empty_braces = true
csharp_stick_comment = false
csharp_wrap_after_declaration_lpar = true
csharp_wrap_after_invocation_lpar = true
csharp_wrap_arguments_style = chop_if_long
csharp_wrap_array_initializer_style = chop_if_long
csharp_wrap_before_first_type_parameter_constraint = true
csharp_wrap_extends_list_style = chop_if_long
csharp_wrap_limit = 180
csharp_wrap_parameters_style = chop_if_long
csharp_keep_existing_declaration_block_arrangement = true

# additional
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2017
#
csharp_braces_for_for = required
csharp_braces_for_foreach = required
csharp_braces_for_ifelse = required
csharp_braces_forwhile = required
csharp_indent_switch_labels = true
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
#csharp_new_line_before_members_in_object_initializers = true
csharp_prefer_braces= true:error
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async : error
csharp_preserve_single_line_blocks = true
csharp_space_after_cast = true
#csharp_space_after_keywords_in_control_flow_statements
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses = false

csharp_style_expression_bodied_constructors = false:error
csharp_style_expression_bodied_indexers = true:error
csharp_style_expression_bodied_methods = when_on_single_line:error
csharp_style_expression_bodied_properties = when_on_single_line:error
csharp_style_expression_bodied_accessors = when_on_single_line:error
csharp_style_pattern_matching_over_is_with_cast_check = true:error
csharp_style_var_for_built_in_types = true:error
csharp_style_var_when_type_is_apparent = true:error
csharp_style_var_elsewhere = true:error

dotnet_style_parentheses_in_other_operators = never_if_unnecessary : error
dotnet_style_predefined_type_for_locals_parameters_members = true : error
dotnet_style_predefined_type_for_member_access = true : error
dotnet_style_qualification_for_event = false : error
dotnet_style_qualification_for_field = false : error
dotnet_style_qualification_for_method = false : error
dotnet_style_qualification_for_property = false : error
dotnet_style_readonly_field = true : error
dotnet_style_require_accessibility_modifiers = always : error

# c# Naming Conventions
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions?view=vs-2017
# Implementation of https://readme.dudesoln.com/display/EA/Naming+Style

# Naming Symbols
#namespaces
dotnet_naming_symbols.namespaces.applicable_kinds = namespace
# types - Defines class, struct, enum and delegate types
dotnet_naming_symbols.types.applicable_kinds = class, struct, enum, delegate
# interface_types - Defines interfaces
dotnet_naming_symbols.interfaces.applicable_kinds = interface
# public_symbols - Define any public symbol
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.public_symbols.applicable_kinds = method, property, event, delegate
# constant_fields - Define constant fields
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
# non_private_readonly_fields - Define public, internal and protected readonly fields
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, internal, protected
dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly
# static_readonly_fields - Define static and readonly fields
dotnet_naming_symbols.static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static, readonly
# public_internal_fields - Define public and internal fields
dotnet_naming_symbols.public_internal_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_internal_fields.applicable_kinds = field
# private_protected_fields - Define private and protected fields
dotnet_naming_symbols.private_protected_fields.applicable_accessibilities = private, protected
dotnet_naming_symbols.private_protected_fields.applicable_kinds = field
# parameters - Defines any parameter
dotnet_naming_symbols.parameters.applicable_kinds = parameter
#type parameter - Defines type parameters
dotnet_naming_symbols.type_parameters.applicable_kinds = type_parameter

# Naming Styles
# camel_case - Define the camelCase style
dotnet_naming_style.camel_case.capitalization = camel_case
# pascal_case - Define the PascalCase style
dotnet_naming_style.pascal_case.capitalization = pascal_case
# first_upper - The first character must start with an upper-case character
dotnet_naming_style.first_upper.capitalization = first_word_upper
# prefix_interface_with_i - Interfaces must be PascalCase and the first character of an interface must be an 'I'
dotnet_naming_style.prefix_interface_with_i.capitalization = pascal_case
dotnet_naming_style.prefix_interface_with_i.required_prefix = I
# prefix_type_param_with_t - Type Parameters must be PascalCase and the first character of the type parameter must be a 'T'
dotnet_naming_style.prefix_type_param_with_t.capitalization = pascal_case
dotnet_naming_style.prefix_type_param_with_t.required_prefix = T
# prefix private fields with underscore
dotnet_naming_style.prefix_private_with_underscore.capitalization = camel_case
dotnet_naming_style.prefix_private_with_underscore.required_prefix = _

# Naming Rules
# Constant fields must be PascalCase
dotnet_naming_rule.constant_fields_must_be_pascal_case.severity = error
dotnet_naming_rule.constant_fields_must_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_must_be_pascal_case.style = pascal_case
# Public, internal and protected readonly fields must be PascalCase
dotnet_naming_rule.non_private_readonly_fields_must_be_pascal_case.severity = error
dotnet_naming_rule.non_private_readonly_fields_must_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_must_be_pascal_case.style = pascal_case
# Static readonly fields must be PascalCase
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.severity = error
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.symbols = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.style = pascal_case
# Private and protected fields must be _camelCase
dotnet_naming_rule.prefix_private_with_underscore.severity = error
dotnet_naming_rule.prefix_private_with_underscore.symbols = private_protected_fields
dotnet_naming_rule.prefix_private_with_underscore.style = prefix_private_with_underscore
# Public and internal fields must be PascalCase
dotnet_naming_rule.public_internal_fields_must_be_pascal_case.severity = error
dotnet_naming_rule.public_internal_fields_must_be_pascal_case.symbols = public_internal_fields
dotnet_naming_rule.public_internal_fields_must_be_pascal_case.style = pascal_case
# Private and protected fields must be camelCase
dotnet_naming_rule.private_protected_fields_must_be_camel_case.severity = error
dotnet_naming_rule.private_protected_fields_must_be_camel_case.symbols = private_protected_fields
dotnet_naming_rule.private_protected_fields_must_be_camel_case.style = camel_case
# Public members must be capitalized
dotnet_naming_rule.public_members_must_be_capitalized.severity = error
dotnet_naming_rule.public_members_must_be_capitalized.symbols = public_symbols
dotnet_naming_rule.public_members_must_be_capitalized.style = first_upper
# Parameters must be camelCase
dotnet_naming_rule.parameters_must_be_camel_case.severity = error
dotnet_naming_rule.parameters_must_be_camel_case.symbols = parameters
dotnet_naming_rule.parameters_must_be_camel_case.style = camel_case
# Class, struct, enum and delegates must be PascalCase
dotnet_naming_rule.types.severity = error
dotnet_naming_rule.types.symbols = types
dotnet_naming_rule.types.style = pascal_case
# Interfaces must be PascalCase and start with an 'I'
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.severity = error
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.symbols = interfaces
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.style = prefix_interface_with_i
# Type Parameters must be PascalCase and start with a 'T'
dotnet_naming_rule.type_parameters_must_be_prefixed_with_t.severity = error
dotnet_naming_rule.type_parameters_must_be_prefixed_with_t.symbols = type_parameters
dotnet_naming_rule.type_parameters_must_be_prefixed_with_t.style = prefix_type_param_with_t
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_space_around_binary_operators = before_and_after
csharp_space_between_square_brackets = false
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_static_local_function = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion

csharp_place_type_attribute_on_same_line = false
csharp_place_attribute_on_same_line = false\
place_type_attribute_on_same_line = false
place_attribute_on_same_line = false

[*.sh]
insert_final_newline = true